name: Build tmux

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  prepare_builder:
    name: Prepare builder container
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DOCKER_REGISTRY: ghcr.io
    outputs:
      image: ${{ steps.meta.outputs.tags[0] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config: .github/buildkit.toml
      - uses: sigstore/cosign-installer@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/builder
          tags: |
            type=sha
            type=ref,event=tag,enable=${{ github.event_name == 'push' }}
            type=ref,event=branch,enable=${{ github.event_name == 'push' }}
            type=ref,event=pr,enable=${{ github.event_name == 'pull_request' }}
          flavor: |
            latest=${{ github.event_name != 'pull_request' }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        id: build-and-push
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Sign the published Docker image with GitHub OIDC Token
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  build:
    name: Build tmux
    runs-on: ubuntu-latest
    needs: [prepare_builder]
    if: ${{ false }}
    strategy:
      matrix:
        include:
          - libevent: "2.1.12-stable"
            ncurses: "6.5"
            tmux: "3.4"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build tmux
        run: docker compose up
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tmux-${{ matrix.tmux }}
          path: ${{ github.workspace }}/output/tmux
